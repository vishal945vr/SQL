select*from SwiggyDB.Customers ;
--#Q-1Display all customers who live in 'Delhi'.
select*from SwiggyDB.Customers
where city="Delhi";
--#---Q-2Find the average rating of all restaurants in'Mumbai'
select*from SwiggyDB.restaurants;
select avg(rating)from SwiggyDB.restaurants
where city="Mumbai";
--#Q3. Find the top 5 restaurants with the highest average rating.
SELECT
name, rating
FROM
restaurants
ORDER BY rating desc
LIMIT 5;

--#Q4 Display all customers who have never placed an order

SELECT
customers.customer_id,
customers.name
FROM
customers
LEFT JOIN
orders
ON
customers.customer_id = orders.customer_id
WHERE
orders.order_id IS NULL;

--# Q5 Find the number of orders placed by each customer in'Mumbai'
SELECT
customers.customer_id,
customers.name,
COUNT(orders.order_id) AS order_count
FROM
customers
JOIN
orders
ON
customers.customer_id = orders.customer_id
WHERE
customers.city = 'Mumbai'
GROUP BY
customers.customer_id,
customers.name;

--# Q6-.Display all orders placed in the last 30 days
SELECT
order_id,
customer_id,
order_date,
total_amount
FROM
Orders
WHERE
order_date >= NOW() - INTERVAL 30 DAY;

--# Q7-4.Display the total number of orders placed by each customer.
SELECT
customers.name, count(orders.order_id)
FROM
customers
left JOIN
orders ON customers.customer_id =
orders.customer_id
group by customers.name;

--#Q8-Find the total revenue generated by each restaurant.
SELECT
restaurants.name,
SUM(orders.total_amount)
FROM
restaurants
LEFT JOIN
orders ON orders.restaurant_id =
restaurants.restaurant_id
GROUP BY restaurants.name;

--#Q9-List all delivery partners who have completed more than 1 delivery
SELECT
deliverypartners.name, COUNT(orderdelivery.order_id)
FROM
deliverypartners
JOIN
orderdelivery ON deliverypartners.partner_id =
orderdelivery.partner_id
JOIN
deliveryupdates ON deliveryupdates.order_id =
orderdelivery.order_id
WHERE
deliveryupdates.status <> 'failed'
GROUP BY deliverypartners.name
HAVING COUNT(orderdelivery.order_id) > 1;

--#Q10.Find the customers who have placed orders on exactly three different days
select customers.name
from customers
join orders on
orders.customer_id=customers.customer_id
group by customers.name
having count(distinct order_date)=3;
--#Q11-Find the delivery partner who has worked with the most different customers

SELECT
deliverypartners.partner_id,
deliverypartners.name,
COUNT(DISTINCT orders.customer_id) AS diff_customers
FROM
deliverypartners
JOIN
orderdelivery ON deliverypartners.partner_id =
orderdelivery.partner_id
JOIN
orders ON orderdelivery.order_id = orders.order_id
GROUP BY
deliverypartners.partner_id,
deliverypartners.name
ORDER BY
diff_customers DESC
LIMIT 5;

--#Q Identify customers who have the same city and have placed orders at the same

select
c1.customer_id AS customer1_id,
c1.name AS customer1_name,
c2.customer_id AS customer2_id,
c2.name AS customer2_name,
c1.city,
o1.restaurant_id
FROM
customers c1
JOIN
orders o1 ON c1.customer_id = o1.customer_id
JOIN
customers c2 ON c1.city = c2.city AND c1.customer_id <>
c2.customer_id
JOIN
orders o2 ON c2.customer_id = o2.customer_id
AND o1.restaurant_id = o2.restaurant_id
WHERE
o1.order_date <> o2.order_date
ORDER BY
c1.city, o1.restaurant_id, c1.customer_id;
